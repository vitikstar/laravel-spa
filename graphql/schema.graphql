scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Query {
    user(
        id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])
        email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    comment(
        id: ID @eq
    ): Comment @find

    users(
        name: String @where(operator: "like")
    ): [User!]! @find
}

type User {
    id: ID!
    name: String!
    email: String!
    email_verified_at: DateTime
    created_at: DateTime!
    updated_at: DateTime!
    data: String
    token: String
    comments: [Comment!]!
}

type Comment {
    offset: String
    limit: String
    text: String
    data: String
    id: Int
}

type Mutation {
    registerUser(
        name: String!
        email: String!
        password: String!
    ): User @field(resolver: "RegisterUser")

    authUser(
        email: String!
        password: String!
    ): User @field(resolver: "AuthUser")

    createComment(
        text: String!
        parent_comment_id: Int
        file: String
    ): Comment @field(resolver: "CreateComment")
}
